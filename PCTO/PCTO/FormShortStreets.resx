<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>